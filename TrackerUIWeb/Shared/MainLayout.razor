@inherits LayoutComponentBase
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage;
    @inject NavigationManager NavigationManager

<div class="bb-page">

    <Sidebar @ref="sidebar"
             Href="/"
             CustomIconName="bi bi-AlarmFill"
             Title="PMT"
             BadgeText="v1.0.0"
             DataProvider="SidebarDataProvider" />

    <main>
        <div class="bb-top-row px-4 d-flex justify-content-between">
            <Icon Name="IconName.List" role="button" @onclick="ToggleSidebar" />
            <Button Color="ButtonColor.Danger" @onclick="Logout"><span class="glyphicon glyphicon-log-out"></span> Log out </Button>
        </div>

        <article class="content px-4">
            <div class="py-2">@Body</div>

        </article>
    </main>

</div>
<Toasts class="p-3" AutoHide="true" Delay="5000" Placement="ToastsPlacement.TopRight" />
@code {
    Sidebar sidebar = default!;
    IEnumerable<NavItem> navItems;

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        await sessionStorage.SetItemAsync("LoggedInUser", "Denzel");
        await sessionStorage.SetItemAsync("Role", "Admin");

        if (navItems is null)
            navItems = GetNavItems();

        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private IEnumerable<NavItem> GetNavItems()
    {
        navItems = new List<NavItem>
        {
            new NavItem { Id = "1", Href = "/Dashboard", IconName = IconName.HouseDoorFill, Text = "Dashboard"},

            new NavItem { Id = "2", IconName = IconName.LayoutSidebarInset, Text = "Configuration", IconColor = IconColor.Primary },
            new NavItem { Id = "3", Href = "/Stock/StockManagement", IconName = IconName.WindowPlus, Text = "Stock Management", ParentId="2"},
            new NavItem { Id = "4", Href = "/Product/ProductConfiguration", IconName = IconName.WindowPlus, Text = "Products", ParentId="2"},

            new NavItem { Id = "5", IconName = IconName.ExclamationTriangleFill, Text = "Management", IconColor = IconColor.Success },
            new NavItem { Id = "6", Href = "/User/ProfileManagement", IconName = IconName.CheckCircleFill, Text = "Profile Manager", ParentId="4"},
            new NavItem { Id = "7", Href = "/User/Usermanagemt", IconName = IconName.PersonSquare, Text = "Users", ParentId="4"},
            // new NavItem { Id = "7", Href = "/sidebar", IconName = IconName.LayoutSidebarInset, Text = "Sidebar", ParentId="4"},

            // new NavItem { Id = "8", IconName = IconName.WindowPlus, Text = "Forms", IconColor = IconColor.Danger },
            // new NavItem { Id = "9", Href = "/autocomplete", IconName = IconName.InputCursorText, Text = "Auto Complete", ParentId="8"},
            // new NavItem { Id = "10", Href = "/currency-input", IconName = IconName.CurrencyDollar, Text = "Currency Input", ParentId="8"},
            // new NavItem { Id = "11", Href = "/number-input", IconName = IconName.InputCursor, Text = "Number Input", ParentId="8"},
            // new NavItem { Id = "12", Href = "/switch", IconName = IconName.ToggleOn, Text = "Switch", ParentId="8"},
        };

        return navItems;
    }

    private void ToggleSidebar() => sidebar.ToggleSidebar();


    private void Logout()
    {
        sessionStorage.ClearAsync();
        NavigationManager.NavigateTo("/");


    }
}