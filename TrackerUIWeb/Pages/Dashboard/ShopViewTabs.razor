@using TrackerUIWeb.Data.ApiGateway
@using TrackerUIWeb.Data.DataTransferObjects
@inject NavigationManager NavigationManager
 @inject HttpHandlerService httpHandler
 @inject Blazored.SessionStorage.ISessionStorageService sessionStorage;

@page "/Shop"

<style>
    * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    }

    body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f0f2f5;
    padding: 2rem;
    }

    .container {
    max-width: 1200px;
    margin: 0 auto;
    }

    .tile-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
    padding: 1rem;
    }

    .tile {
    background: white;
    border-radius: 10px;
    padding: 1.5rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    cursor: pointer;
    }

    .tile:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    .tile h2 {
    color: #1a73e8;
    margin-bottom: 1rem;
    font-size: 1.25rem;
    }

    .tile p {
    color: #5f6368;
    line-height: 1.5;
    }

    .tile-image {
    width: 100%;
    height: 150px;
    background-color: #e8f0fe;
    border-radius: 8px;
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #1a73e8;
    font-size: 2rem;
    }

    @@media (max-width: 600px) {
    body {
    padding: 1rem;
    }

    .tile-grid {
    grid-template-columns: 1fr;
    }
    }
</style>

<div class="container">
<div class="row">
    @foreach(var item in ShopsList){

        
        <div class="col-3 m-3">
        <div class="tile-grid">
            <div class="tile">
                <div class="tile-image">@item.ShopId</div>

                <button class="text-light btn btn-sm btn-danger" @onclick="()=>OpenShop(item.ShopId)">@item.ShopName</button>


                <p>@item.ShopManagerName : @item.ShopManagerContact</p>
            </div>

        </div>
        </div>
        

    }
    </div>
</div>
<script>
    document.querySelectorAll('.tile').forEach(tile => {
    tile.addEventListener('click', () => {
    tile.style.transform = 'scale(0.95)';
    setTimeout(() => {
    tile.style.transform = '';
    }, 200);
    });
    });
</script>

@code
{

    private IEnumerable<ShopDTO> ShopsList = new List<ShopDTO> {};

    protected override async Task OnInitializedAsync()
    {
    
        ShopsList =  await httpHandler.GetList<ShopDTO>("Shop/GetAllShops");;

        string Role = await sessionStorage.GetItemAsync<string>("Role");
        string Username = await sessionStorage.GetItemAsync<string>("LoggedInUser");


    }
    public async void OpenShop(int shopId)
    {
        NavigationManager.NavigateTo($"Shop/ShopDetails/{shopId}");

     }
}