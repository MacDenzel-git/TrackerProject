@page "/login"
@using System.ComponentModel.DataAnnotations
@using AllinOne.DataHandlers
@using DataAccessLayer.DataTransferObjects
@using Microsoft.AspNetCore.Components;
@using TrackerUIWeb.Data.ApiGateway
@using TrackerUIWeb.Data.DataTransferObjects
@using TrackerUIWeb.Utilities
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage;
@inject NavigationManager NavigationManager;
@inject HttpHandlerService httpHandler;
@inject IUtilService _UtilService;
@* Login Page *@

<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="card shadow-lg p-4" style="max-width: 400px; width: 100%; border-radius: 12px;">
        <h3 class="text-center mb-4">Login</h3>
        <EditForm Model="@loginModel" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />

            <div class="form-group mb-3">
                <label for="username">Username</label>
                <InputText id="username" class="form-control" @bind-Value="loginModel.Username" placeholder="Enter your username" />
                <ValidationMessage For="() => loginModel.Username" />
            </div>

            <div class="form-group mb-3">
                <label for="password">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" placeholder="Enter your password" />
                <ValidationMessage For="() => loginModel.Password" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Login</button>

            <div class="text-center mt-3">
                <a href="/register" class="text-decoration-none">Don't have an account? Register</a>
            </div>
        </EditForm>
    </div>
</div>

<style>
    body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }

    .card {
        background-color: #ffffff;
        border: none;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #004085;
    }

    label {
        font-weight: bold;
    }

    a {
        color: #007bff;
    }

    a:hover {
        color: #0056b3;
        text-decoration: underline;
    }
</style>

@code {
    private LoginModel loginModel = new LoginModel();
        protected OutputHandler OutputHandler = new();

    private async Task HandleValidSubmit()
    {

        // Handle login logic here

                OutputHandler = await httpHandler.Create<LoginModel>("login", loginModel);

        Console.WriteLine($"Username: {loginModel.Username}, Password: {loginModel.Password}");
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; }
    }
}
